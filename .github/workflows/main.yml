name: ci
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - '**'

jobs:
  check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: 16
      - run: npm install
      - run: npm run build
      - name: Lint
        run: npm run lint
  test:
    needs: check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: 16
      - uses: bahmutov/npm-install@v1
      - run: npm run build
      - run: npm run test
  deploy-staging:
    name: Deploy Staging
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: 16
      - uses: bahmutov/npm-install@v1
      - name: Publish app
        uses: cloudflare/wrangler-action@2.0.0
        with:
          apiToken: ${{secrets.CF_API_TOKEN }}
          environment: 'staging'
  changelog:
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    name: Changelog
    runs-on: ubuntu-latest
    outputs:
      releases_created: ${{ steps.tag-release.outputs.releases_created }}
    steps:
      - uses: GoogleCloudPlatform/release-please-action@v3
        id: tag-release
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          release-type: node
  release:
    if: github.event_name == 'push' && github.ref == 'refs/heads/main' && needs.changelog.outputs.releases_created
    name: Release
    runs-on: ubuntu-latest
    needs:
      - check
      - test
      - changelog
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: '16'
          registry-url: https://registry.npmjs.org/
      - uses: bahmutov/npm-install@v1
      - name: Deploy to Cloudflare
        uses: cloudflare/wrangler-action@2.0.0
        with:
          apiToken: ${{ secrets.CF_API_TOKEN }}
          environment: 'production'